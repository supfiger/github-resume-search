{"version":3,"sources":["components/Header/BackHome.js","components/Header/index.js","routes/Home/HomeHeader.js","routes/Home/utils.js","routes/Home/index.js","routes/Resume/dumb/ResumeHeader.js","routes/Resume/dumb/NotFoundHeader.js","components/Table/dumb/TableRow.js","utils.js","components/Table/utils.js","components/Table/dumb/TableComponent.js","components/Table/index.js","routes/Resume/index.js","routes/Resume/utils.js","App.js","reportWebVitals.js","index.js"],"names":["BackHome","Row","className","to","Header","back","title","children","HomeHeader","searchUser","a","controller","username","history","fetch","signal","response","json","push","pathname","state","userData","console","error","Search","useState","setUsername","searching","setSearching","useHistory","handleSearchClick","useEffect","AbortController","abort","Col","InputGroup","Input","placeholder","value","onChange","e","target","onKeyDown","key","InputGroupAddon","addonType","Button","color","onClick","Home","Container","ResumeHeader","name","NotFoundHeader","TableRow","scope","convertNumbersToPercentage","obj","newObj","sum","getSumFromObjectValues","newValue","Number","toFixed","Object","values","reduce","b","getReposLanguageList","repos","urls","map","item","languages_url","request","then","data","Promise","all","getPercentageOfLanguages","arr","sumOfEachLanguages","langKeys","keys","forEach","currentKey","prevLangValue","langValue","Math","round","percentageOfEachLanguages","getRepos","repos_url","getLanguages","Table","windowSize","React","setWindowSize","setSize","width","window","innerWidth","height","innerHeight","addEventListener","removeEventListener","useWindowSize","userFullName","website","amountOfPublicRepos","dateProfileCreated","languages","split","lastName","date","Date","toLocaleDateString","month","day","year","languagesGrid","length","this","columnsAmount","ceil","Array","rowsAmount","getCurrentLanguage","row","col","lastEditedRepos","prev","curr","updated_at","sort","slice","convertTableData","href","arrayOfRows","item1","index1","arrayOfColumns","item2","index2","language","entries","percentage","svn_url","UserInfo","setRepos","setLanguages","tableInfo","public_repos","created_at","blog","Resume","setUserData","loading","setLoading","userId","setUserId","location","id","catch","finally","fetchUserData","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cb53217.chunk.js","sourcesContent":["import { Row } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function BackHome() {\n  return (\n    <Row className=\"border-bottom py-3\">\n      <Link to=\"/\">‚Üê Back to home</Link>\n    </Row>\n  );\n}\n","import { Row } from \"reactstrap\";\n\nimport BackHome from \"./BackHome\";\n\nexport default function Header({ back, title, children }) {\n  return (\n    <div>\n      {back && <BackHome />}\n      <Row className=\"border-bottom py-3\">\n        <h1>{title}</h1>\n      </Row>\n      {children && <Row className=\" py-3\">{children}</Row>}\n    </div>\n  );\n}\n","import Header from \"../../components/Header\";\n\nexport default function HomeHeader() {\n  return (\n    <Header title=\"Home\">\n      <h2 className=\"h5\">Search for information about any github user</h2>\n      <p className=\"m-0\">\n        This application can show you an information about any github user.{\" \"}\n        <br />\n        Just enter a username you want and click the \"Search\" button.\n      </p>\n    </Header>\n  );\n}\n","export const searchUser = async ({ controller, username, history }) => {\n  try {\n    const response = await fetch(`https://api.github.com/users/${username}`, {\n      signal: controller.signal,\n    });\n    const json = await response.json();\n\n    history.push({\n      pathname: `/${username}`,\n      state: { userData: json },\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Button,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nimport HomeHeader from \"./HomeHeader\";\nimport { searchUser } from \"./utils\";\n\nfunction Search() {\n  const [username, setUsername] = useState(\"\");\n  const [searching, setSearching] = useState(false);\n  const history = useHistory();\n\n  const handleChangeUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const handleEnterClick = (e) => {\n    if (e.key === \"Enter\") handleSearchClick();\n  };\n\n  const handleSearchClick = () => {\n    setSearching(true);\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n    if (searching) searchUser({ controller, username, history });\n\n    return () => controller?.abort();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searching]);\n\n  return (\n    <Row className=\"py-3\">\n      <Col className=\"py-2\">\n        <InputGroup>\n          <Input\n            placeholder=\"Enter a username\"\n            value={username}\n            onChange={handleChangeUsername}\n            onKeyDown={handleEnterClick}\n          />\n          <InputGroupAddon addonType=\"append\">\n            <Button color=\"primary\" onClick={handleSearchClick}>\n              Search\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n      </Col>\n    </Row>\n  );\n}\n\nexport default function Home() {\n  return (\n    <Container>\n      <HomeHeader />\n      <Search />\n    </Container>\n  );\n}\n","import Header from \"../../../components/Header\";\n\nexport default function ResumeHeader({ userData }) {\n  const { name } = userData;\n  const title = name ? `${name}  ‚Äî GitHub resume` : `GitHub resume`;\n\n  return <Header back title={title}></Header>;\n}\n","import Header from \"../../../components/Header\";\n\nexport default function NotFoundHeader({ username }) {\n  return (\n    <Header back title=\"Not Found\">\n      <p>\n        The user <strong>{username}</strong> is not found.\n      </p>\n    </Header>\n  );\n}\n","export default function TableRow({ title, children }) {\n  return (\n    <tr>\n      <th scope=\"row\">{title}</th>\n      <td>{children}</td>\n    </tr>\n  );\n}\n","export const convertNumbersToPercentage = (obj) => {\n  const newObj = { ...obj };\n  const sum = getSumFromObjectValues(newObj);\n\n  for (let key in obj) {\n    const newValue = Number(((newObj[key] / sum) * 100).toFixed(1));\n    newObj[key] = newValue;\n  }\n\n  return newObj;\n};\n\nexport const getSumFromObjectValues = (obj) => {\n  return Object.values(obj).reduce((a, b) => a + b, 0);\n};\n\nexport const getSumFromArray = (arr) => arr.reduce((acc, cur) => acc + cur);\n","import React from \"react\";\n\nimport { convertNumbersToPercentage } from \"../../utils\";\n\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = React.useState(null);\n\n  React.useEffect(() => {\n    const setSize = () => {\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n    };\n\n    setSize();\n    window.addEventListener(\"resize\", setSize);\n\n    return () => window.removeEventListener(\"resize\", setSize);\n  }, []);\n\n  return windowSize;\n};\n\nexport const convertTableData = (data) => {\n  const {\n    userFullName,\n    website,\n    amountOfPublicRepos,\n    dateProfileCreated,\n    languages,\n    repos,\n    width,\n  } = data;\n\n  const createLanguagesGrid = () => {\n    return {\n      get columnsAmount() {\n        if (width < 700) return 1;\n        return 3;\n      },\n      get rowsAmount() {\n        if (languages.length < this.columnsAmount) return 1;\n        return Math.ceil(languages.length / this.columnsAmount);\n      },\n      get arrayOfColumns() {\n        return [...Array(this.columnsAmount).keys()];\n      },\n      get arrayOfRows() {\n        return [...Array(this.rowsAmount).keys()];\n      },\n      getCurrentLanguage(row, col) {\n        return languages[row * this.columnsAmount + col];\n      },\n    };\n  };\n\n  const getLastEditedRepos = () => {\n    return repos\n      .map((item) => {\n        const fieldKeys = [\"updated_at\", \"svn_url\", \"name\"];\n        return fieldKeys.reduce(\n          (prev, curr) => ({ ...prev, [curr]: item[curr] }),\n          {}\n        );\n      })\n      .map((item) => ({ ...item, updated_at: new Date(item[\"updated_at\"]) }))\n      .sort((a, b) => new Date(b.date) - new Date(a.date))\n      .slice(0, 5);\n  };\n\n  const name = (userFullName && userFullName.split(\" \")[0]) || \"\";\n  const lastName = (userFullName && userFullName.split(\" \")[1]) || \"\";\n  const date = new Date(dateProfileCreated).toLocaleDateString(\"en-US\", {\n    month: \"long\",\n    day: \"numeric\",\n    year: \"numeric\",\n  });\n  const languagesGrid = languages && createLanguagesGrid();\n  const lastEditedRepos = repos && getLastEditedRepos();\n\n  return {\n    name,\n    lastName,\n    website,\n    amountOfPublicRepos,\n    date,\n    languagesGrid,\n    lastEditedRepos,\n  };\n};\n\nconst getReposLanguageList = async ({ repos, controller }) => {\n  const urls = repos.map((item) => item.languages_url);\n  const request = urls.map((item) =>\n    fetch(item, { signal: controller.signal })\n      .then((data) => data.json())\n      .then((data) => convertNumbersToPercentage(data))\n  );\n\n  return await Promise.all(request);\n};\n\nconst getPercentageOfLanguages = (arr) => {\n  // get sum of each language\n  const sumOfEachLanguages = arr.reduce((obj, item) => {\n    const langKeys = Object.keys(item);\n    const newObj = { ...obj };\n\n    langKeys.forEach((currentKey) => {\n      const prevLangValue = newObj[currentKey] || 0;\n      const langValue = Math.round(prevLangValue + item[currentKey]);\n      newObj[currentKey] = langValue;\n    });\n\n    return { ...newObj };\n  }, {});\n\n  // get percentage of each language\n  const percentageOfEachLanguages =\n    convertNumbersToPercentage(sumOfEachLanguages);\n\n  // array of objects\n  const percentage = Object.keys(percentageOfEachLanguages).map((item) => ({\n    [item]: percentageOfEachLanguages[item],\n  }));\n\n  return percentage;\n};\n\nexport const getRepos = async ({ repos_url, controller }) => {\n  const response = await fetch(repos_url, {\n    signal: controller.signal,\n  });\n  return await response.json();\n};\n\nexport const getLanguages = async ({ repos, controller }) => {\n  const response = await getReposLanguageList({ repos, controller });\n  return getPercentageOfLanguages(response);\n};\n","import { Table as BootstrapTable, Row, Col } from \"reactstrap\";\n\nimport TableRow from \"./TableRow\";\nimport { convertTableData, useWindowSize } from \"../utils\";\n\nexport default function Table({ data }) {\n  const windowSize = useWindowSize();\n  const width = windowSize && windowSize.width;\n\n  const {\n    name,\n    lastName,\n    website,\n    amountOfPublicRepos,\n    date,\n    languagesGrid,\n    lastEditedRepos,\n  } = convertTableData({ ...data, width });\n\n  return (\n    <BootstrapTable>\n      <tbody>\n        <TableRow title=\"Main info\">\n          <span>Name: </span>\n          <strong>{name} </strong>\n          <br />\n          <span>Last name: </span>\n          <strong>{lastName}</strong>\n          <br />\n          <span>Public repositories: </span>\n          <strong>{amountOfPublicRepos}</strong>\n          <br />\n          <span>Date profile created: </span>\n          <strong>{date}</strong>\n        </TableRow>\n        <TableRow title=\"Website\">\n          <a href={website}>{website}</a>\n        </TableRow>\n        <TableRow title=\"Languages\">\n          {languagesGrid &&\n            languagesGrid.arrayOfRows.map((item1, index1) => (\n              <Row key={item1}>\n                {languagesGrid.arrayOfColumns.map((item2, index2) => {\n                  const language = languagesGrid.getCurrentLanguage(\n                    index1,\n                    index2\n                  );\n                  if (!language) return null;\n\n                  const [name, percentage] = Object.entries(language)[0];\n\n                  return (\n                    <Col key={item2}>\n                      <strong>{name}</strong> {`(${percentage}%)`}\n                    </Col>\n                  );\n                })}\n              </Row>\n            ))}\n        </TableRow>\n        <TableRow title=\"Recently edited repositories\">\n          {lastEditedRepos &&\n            lastEditedRepos.map((item) => (\n              <Row key={item.name}>\n                <a href={item.svn_url}>{item.name}</a>\n              </Row>\n            ))}\n        </TableRow>\n      </tbody>\n    </BootstrapTable>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Row } from \"reactstrap\";\n\nimport TableComponent from \"./dumb/TableComponent\";\nimport { getRepos, getLanguages } from \"./utils\";\n\nexport default function UserInfo({ userData }) {\n  const [repos, setRepos] = useState(null);\n  const [languages, setLanguages] = useState(null);\n  const { repos_url } = userData;\n  const tableInfo = {\n    userFullName: userData.name,\n    amountOfPublicRepos: userData.public_repos,\n    dateProfileCreated: userData.created_at,\n    website: userData.blog,\n    languages,\n    repos,\n  };\n\n  // set list of user repos\n  useEffect(() => {\n    const controller = new AbortController();\n    getRepos({ repos_url, controller }).then((data) => setRepos(data));\n\n    return () => controller?.abort();\n  }, [repos_url]);\n\n  // set list of user's used languages\n  useEffect(() => {\n    const controller = new AbortController();\n    if (repos) {\n      getLanguages({ repos, controller }).then((data) => setLanguages(data));\n    }\n\n    return () => controller?.abort();\n  }, [repos]);\n\n  return (\n    <Row>\n      <TableComponent data={tableInfo} />\n    </Row>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\n\nimport ResumeHeader from \"./dumb/ResumeHeader\";\nimport NotFoundHeader from \"./dumb/NotFoundHeader\";\nimport Table from \"../../components/Table\";\nimport { fetchUserData } from \"./utils\";\n\nexport default function Resume() {\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const history = useHistory();\n  const username = history.location.pathname.slice(1);\n\n  useEffect(() => {\n    if (userData) setUserId(userData.id);\n  }, [userData]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    fetchUserData({ username, controller, setLoading }).then((data) =>\n      setUserData(data)\n    );\n\n    return () => controller?.abort();\n  }, [username]);\n\n  if (userId) {\n    return (\n      <Container>\n        <ResumeHeader userData={userData} />\n        {loading ? <p>Loading...</p> : <Table userData={userData} />}\n      </Container>\n    );\n  } else {\n    return (\n      <Container>\n        <NotFoundHeader username={username} />\n      </Container>\n    );\n  }\n}\n","export const fetchUserData = ({ controller, username, setLoading }) => {\n  setLoading(true);\n\n  return fetch(`https://api.github.com/users/${username}`, {\n    signal: controller.signal,\n  })\n    .then((data) => data.json())\n    .catch((error) => console.error(error))\n    .finally(setLoading(false));\n};\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./routes/Home\";\nimport Resume from \"./routes/Resume\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/:username\" component={Resume} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}