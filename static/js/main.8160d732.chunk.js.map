{"version":3,"sources":["components/Header/BackHome.js","components/Header/index.js","routes/Home/HomeHeader.js","routes/Home/utils.js","routes/Home/index.js","routes/Resume/dumb/ResumeHeader.js","routes/Resume/dumb/NotFoundHeader.js","components/Table/dumb/TableRow.js","utils.js","components/Table/utils.js","components/Table/dumb/TableComponent.js","components/Table/index.js","routes/Resume/index.js","routes/Resume/utils.js","App.js","reportWebVitals.js","index.js"],"names":["BackHome","Row","className","to","Header","back","title","children","HomeHeader","searchUser","a","controller","username","history","fetch","signal","response","json","push","pathname","state","userData","console","error","Search","useState","setUsername","searching","setSearching","useHistory","handleSearchClick","useEffect","AbortController","abort","Col","InputGroup","Input","placeholder","value","onChange","e","target","onKeyDown","key","InputGroupAddon","addonType","Button","color","onClick","Home","Container","ResumeHeader","name","NotFoundHeader","TableRow","scope","getPercentageFromObj","obj","sum","getSumFromObjectValues","newValue","Number","toFixed","Object","values","reduce","b","getReposLanguageList","repos","reposLanguagesList","item","languages_url","then","data","getLanguages","arr","languages","langKey","keys","prevLangValue","langValue","Math","round","map","getPercentageOfLanguages","Table","windowSize","React","setWindowSize","setSize","width","window","innerWidth","height","innerHeight","addEventListener","removeEventListener","useWindowSize","languagesGrid","lastEditedRepos","userFullName","website","amountOfPublicRepos","dateProfileCreated","split","lastName","date","Date","toLocaleDateString","month","day","year","length","this","columns","Array","rows","getCurrentLanguage","row","col","prev","curr","updated_at","sort","slice","convertTableData","href","arrayOfRows","item1","index1","arrayOfColumns","item2","index2","language","entries","percentage","svn_url","UserInfo","setRepos","setLanguages","repos_url","tableInfo","public_repos","created_at","blog","getRepos","Resume","setUserData","loading","setLoading","userId","setUserId","location","id","catch","finally","fetchUserData","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8160d732.chunk.js","sourcesContent":["import { Row } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function BackHome() {\r\n  return (\r\n    <Row className=\"border-bottom py-3\">\r\n      <Link to=\"/\">‚Üê Back to home</Link>\r\n    </Row>\r\n  );\r\n}\r\n","import { Row } from \"reactstrap\";\r\n\r\nimport BackHome from \"./BackHome\";\r\n\r\nexport default function Header({ back, title, children }) {\r\n  return (\r\n    <div>\r\n      {back && <BackHome />}\r\n      <Row className=\"border-bottom py-3\">\r\n        <h1>{title}</h1>\r\n      </Row>\r\n      {children && <Row className=\" py-3\">{children}</Row>}\r\n    </div>\r\n  );\r\n}\r\n","import Header from \"../../components/Header\";\r\n\r\nexport default function HomeHeader() {\r\n  return (\r\n    <Header title=\"Home\">\r\n      <h2 className=\"h5\">Search for information about any github user</h2>\r\n      <p className=\"m-0\">\r\n        This application can show you an information about any github user.{\" \"}\r\n        <br />\r\n        Just enter a username you want and click the \"Search\" button.\r\n      </p>\r\n    </Header>\r\n  );\r\n}\r\n","export const searchUser = async ({ controller, username, history }) => {\r\n  try {\r\n    const response = await fetch(`https://api.github.com/users/${username}`, {\r\n      signal: controller.signal,\r\n    });\r\n    const json = await response.json();\r\n\r\n    history.push({\r\n      pathname: `/${username}`,\r\n      state: { userData: json },\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nimport HomeHeader from \"./HomeHeader\";\r\nimport { searchUser } from \"./utils\";\r\n\r\nfunction Search() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [searching, setSearching] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const handleChangeUsername = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handleEnterClick = (e) => {\r\n    if (e.key === \"Enter\") handleSearchClick();\r\n  };\r\n\r\n  const handleSearchClick = () => {\r\n    setSearching(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let controller = new AbortController();\r\n    if (searching) searchUser({ controller, username, history });\r\n\r\n    return () => controller?.abort();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searching]);\r\n\r\n  return (\r\n    <Row className=\"py-3\">\r\n      <Col className=\"py-2\">\r\n        <InputGroup>\r\n          <Input\r\n            placeholder=\"Enter a username\"\r\n            value={username}\r\n            onChange={handleChangeUsername}\r\n            onKeyDown={handleEnterClick}\r\n          />\r\n          <InputGroupAddon addonType=\"append\">\r\n            <Button color=\"primary\" onClick={handleSearchClick}>\r\n              Search\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Container>\r\n      <HomeHeader />\r\n      <Search />\r\n    </Container>\r\n  );\r\n}\r\n","import Header from \"../../../components/Header\";\r\n\r\nexport default function ResumeHeader({ userData }) {\r\n  const { name } = userData;\r\n  const title = name ? `${name}  ‚Äî GitHub resume` : `GitHub resume`;\r\n\r\n  return <Header back title={title}></Header>;\r\n}\r\n","import Header from \"../../../components/Header\";\r\n\r\nexport default function NotFoundHeader({ username }) {\r\n  return (\r\n    <Header back title=\"Not Found\">\r\n      <p>\r\n        The user <strong>{username}</strong> is not found.\r\n      </p>\r\n    </Header>\r\n  );\r\n}\r\n","export default function TableRow({ title, children }) {\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\">{title}</th>\r\n      <td>{children}</td>\r\n    </tr>\r\n  );\r\n}\r\n","export const getPercentageFromObj = (obj) => {\r\n  const sum = getSumFromObjectValues(obj);\r\n\r\n  for (let key in obj) {\r\n    const newValue = Number(((obj[key] / sum) * 100).toFixed(1));\r\n    obj[key] = newValue;\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\nexport const getSumFromObjectValues = (obj) => {\r\n  return Object.values(obj).reduce((a, b) => a + b, 0);\r\n};\r\n\r\nexport const getSumFromArray = (arr) => arr.reduce((acc, cur) => acc + cur);\r\n","import React from \"react\";\r\n\r\nimport { getPercentageFromObj } from \"../../utils\";\r\n\r\nexport const useWindowSize = () => {\r\n  const [windowSize, setWindowSize] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    const setSize = () => {\r\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\r\n    };\r\n\r\n    setSize();\r\n    window.addEventListener(\"resize\", setSize);\r\n\r\n    return () => window.removeEventListener(\"resize\", setSize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport const convertTableData = (data) => {\r\n  const {\r\n    userFullName,\r\n    website,\r\n    amountOfPublicRepos,\r\n    dateProfileCreated,\r\n    languages,\r\n    repos,\r\n    width,\r\n  } = data;\r\n\r\n  const name = (userFullName && userFullName.split(\" \")[0]) || \"\";\r\n  const lastName = (userFullName && userFullName.split(\" \")[1]) || \"\";\r\n  const date = new Date(dateProfileCreated).toLocaleDateString(\"en-US\", {\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n    year: \"numeric\",\r\n  });\r\n\r\n  let languagesGrid;\r\n  if (languages) {\r\n    languagesGrid = {\r\n      get columns() {\r\n        if (width < 700) return 1;\r\n        return 3;\r\n      },\r\n      get rows() {\r\n        if (languages.length < this.columns) return 1;\r\n        return Math.round(languages.length / this.columns);\r\n      },\r\n      get arrayOfColumns() {\r\n        return [...Array(this.columns).keys()];\r\n      },\r\n      get arrayOfRows() {\r\n        return [...Array(this.rows).keys()];\r\n      },\r\n      getCurrentLanguage(row, col) {\r\n        return languages[row * this.columns + col];\r\n      },\r\n    };\r\n  }\r\n\r\n  let lastEditedRepos;\r\n  if (repos) {\r\n    lastEditedRepos = repos\r\n      .map((item) => {\r\n        const fieldKeys = [\"updated_at\", \"svn_url\", \"name\"];\r\n        return fieldKeys.reduce(\r\n          (prev, curr) => ({ ...prev, [curr]: item[curr] }),\r\n          {}\r\n        );\r\n      })\r\n      .map((item) => ({ ...item, updated_at: new Date(item[\"updated_at\"]) }))\r\n      .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n      .slice(0, 5);\r\n  }\r\n\r\n  return {\r\n    name,\r\n    lastName,\r\n    website,\r\n    amountOfPublicRepos,\r\n    date,\r\n    languagesGrid,\r\n    lastEditedRepos,\r\n  };\r\n};\r\n\r\nconst getReposLanguageList = async ({ repos, controller }) => {\r\n  let reposLanguagesList = [];\r\n\r\n  for (const item of repos) {\r\n    await fetch(item.languages_url, { signal: controller.signal })\r\n      .then((data) => data.json())\r\n      .then((data) => getPercentageFromObj(data))\r\n      .then((data) => reposLanguagesList.push(data));\r\n  }\r\n\r\n  return reposLanguagesList;\r\n};\r\n\r\nconst getPercentageOfLanguages = (arr) => {\r\n  let languages = {};\r\n\r\n  // get sum of each language\r\n  languages = arr.reduce((obj, item) => {\r\n    const langKey = Object.keys(item)[0];\r\n    const prevLangValue = obj[langKey] || 0;\r\n    const langValue = Math.round(prevLangValue + item[langKey]);\r\n\r\n    if (langKey) {\r\n      return { ...obj, [langKey]: langValue };\r\n    } else {\r\n      return { ...obj };\r\n    }\r\n  }, {});\r\n\r\n  // get percentage of each language\r\n  languages = getPercentageFromObj(languages);\r\n\r\n  // return array of objects\r\n  return Object.keys(languages).map((item) => ({ [item]: languages[item] }));\r\n};\r\n\r\nexport const getRepos = ({ repos_url, controller }) => {\r\n  return fetch(repos_url, {\r\n    signal: controller.signal,\r\n  }).then((data) => data.json());\r\n};\r\n\r\nexport const getLanguages = ({ repos, controller }) => {\r\n  return getReposLanguageList({ repos, controller }).then((data) =>\r\n    getPercentageOfLanguages(data)\r\n  );\r\n};\r\n","import { Table as BootstrapTable, Row, Col } from \"reactstrap\";\r\n\r\nimport TableRow from \"./TableRow\";\r\nimport { convertTableData, useWindowSize } from \"../utils\";\r\n\r\nexport default function Table({ data }) {\r\n  const windowSize = useWindowSize();\r\n  const width = windowSize && windowSize.width;\r\n\r\n  const {\r\n    name,\r\n    lastName,\r\n    website,\r\n    amountOfPublicRepos,\r\n    date,\r\n    languagesGrid,\r\n    lastEditedRepos,\r\n  } = convertTableData({ ...data, width });\r\n\r\n  return (\r\n    <BootstrapTable>\r\n      <tbody>\r\n        <TableRow title=\"Main info\">\r\n          <span>Name: </span>\r\n          <strong>{name} </strong>\r\n          <br />\r\n          <span>Last name: </span>\r\n          <strong>{lastName}</strong>\r\n          <br />\r\n          <span>Public repositories: </span>\r\n          <strong>{amountOfPublicRepos}</strong>\r\n          <br />\r\n          <span>Date profile created: </span>\r\n          <strong>{date}</strong>\r\n        </TableRow>\r\n        <TableRow title=\"Website\">\r\n          <a href={website}>{website}</a>\r\n        </TableRow>\r\n        <TableRow title=\"Languages\">\r\n          {languagesGrid &&\r\n            languagesGrid.arrayOfRows.map((item1, index1) => (\r\n              <Row key={item1}>\r\n                {languagesGrid.arrayOfColumns.map((item2, index2) => {\r\n                  const language = languagesGrid.getCurrentLanguage(\r\n                    index1,\r\n                    index2\r\n                  );\r\n                  if (!language) return null;\r\n\r\n                  const [name, percentage] = Object.entries(language)[0];\r\n\r\n                  return (\r\n                    <Col key={item2}>\r\n                      <strong>{name}</strong> {`(${percentage}%)`}\r\n                    </Col>\r\n                  );\r\n                })}\r\n              </Row>\r\n            ))}\r\n        </TableRow>\r\n        <TableRow title=\"Recently edited repositories\">\r\n          {lastEditedRepos &&\r\n            lastEditedRepos.map((item) => (\r\n              <Row key={item.name}>\r\n                <a href={item.svn_url}>{item.name}</a>\r\n              </Row>\r\n            ))}\r\n        </TableRow>\r\n      </tbody>\r\n    </BootstrapTable>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Row } from \"reactstrap\";\r\n\r\nimport TableComponent from \"./dumb/TableComponent\";\r\nimport { getRepos, getLanguages } from \"./utils\";\r\n\r\nexport default function UserInfo({ userData }) {\r\n  const [repos, setRepos] = useState(null);\r\n  const [languages, setLanguages] = useState(null);\r\n  const { repos_url } = userData;\r\n  const tableInfo = {\r\n    userFullName: userData.name,\r\n    amountOfPublicRepos: userData.public_repos,\r\n    dateProfileCreated: userData.created_at,\r\n    website: userData.blog,\r\n    languages,\r\n    repos,\r\n  };\r\n\r\n  // set list of user repos\r\n  useEffect(() => {\r\n    let controller = new AbortController();\r\n    getRepos({ repos_url, controller }).then((data) => setRepos(data));\r\n\r\n    return () => controller?.abort();\r\n  }, [repos_url]);\r\n\r\n  // set list of user's used languages\r\n  useEffect(() => {\r\n    let controller = new AbortController();\r\n    if (repos) {\r\n      getLanguages({ repos, controller }).then((data) => setLanguages(data));\r\n    }\r\n\r\n    return () => controller?.abort();\r\n  }, [repos]);\r\n\r\n  return (\r\n    <Row>\r\n      <TableComponent data={tableInfo} />\r\n    </Row>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nimport ResumeHeader from \"./dumb/ResumeHeader\";\r\nimport NotFoundHeader from \"./dumb/NotFoundHeader\";\r\nimport Table from \"../../components/Table\";\r\nimport { fetchUserData } from \"./utils\";\r\n\r\nexport default function Resume() {\r\n  const [userData, setUserData] = useState(null);\r\n  const [loading, setLoading] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const history = useHistory();\r\n  const username = history.location.pathname.slice(1);\r\n\r\n  useEffect(() => {\r\n    if (userData) setUserId(userData.id);\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    let controller = new AbortController();\r\n    fetchUserData({ username, controller, setLoading }).then((data) =>\r\n      setUserData(data)\r\n    );\r\n\r\n    return () => controller?.abort();\r\n  }, [username]);\r\n\r\n  if (userId) {\r\n    return (\r\n      <Container>\r\n        <ResumeHeader userData={userData} />\r\n        {loading ? <p>Loading...</p> : <Table userData={userData} />}\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <NotFoundHeader username={username} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","export const fetchUserData = ({ controller, username, setLoading }) => {\r\n  setLoading(true);\r\n\r\n  return fetch(`https://api.github.com/users/${username}`, {\r\n    signal: controller.signal,\r\n  })\r\n    .then((data) => data.json())\r\n    .catch((error) => console.error(error))\r\n    .finally(setLoading(false));\r\n};\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./routes/Home\";\r\nimport Resume from \"./routes/Resume\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/:username\" component={Resume} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}